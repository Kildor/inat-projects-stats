inat-projects-stats.code-workspace:					"label": "{I18n.t}",
inat-projects-stats.code-workspace:					"snippet": "{I18n.t(\"$TM_SELECTED_TEXT\")}", // <-- snippet goes here.
src/App.tsx:    <Loader title={I18n.t("Загружается")} show={true}
src/App.tsx:      message={I18n.t("Загружается язык приложения")}
src/mixins/API.ts:	setState({ loading: true, loadingTitle: I18n.t("Поиск ID вида") });
src/mixins/API.ts:		setState({ loadingTitle: I18n.t("Поиск не удался, проверьте корректность введёного имени") });
src/mixins/API.ts:				I18n.t('Загрузка {1} cтраницы из {2}', [page, ~~(totalCount / perPageFromJSON) ]) :
src/mixins/API.ts:				I18n.t('Загрузка {1} cтраницы', [page] )
src/mixins/ButtonClear.tsx:		title={I18n.t("Очистить сохранённые имена")}><span role='img' aria-label={I18n.t("Очистить")}>❌</span></button>
src/mixins/CSV.tsx:			<button style={{display:"block", margin:"5px auto"}} className="button button-download" onClick={e=>{download(value, filename)}}>{I18n.t("Скачать")}</button>
src/mixins/Form.tsx:			<button disabled={disabled} type='submit' className="btn-submit">{I18n.t("Запустить")}</button>
src/mixins/FormControl.tsx:			children = <a href={`https://www.inaturalist.org/taxa/${value.id}`} target='_blank' rel='noopener noreferrer'><span role='img' aria-label={I18n.t("Успешно")}>✅{!!value.commonName && <span className='common-name'>{value.commonName}</span>}</span></a>
src/mixins/FormControl.tsx:			children = <span role='img' aria-label={I18n.t("Неуспешно")}>⚠️</span>
src/mixins/FormControl.tsx:		<FormControlCheckbox label={I18n.t('Выводить в CSV')} name='csv' onChange={handler} checked={value}></FormControlCheckbox>
src/mixins/FormControl.tsx:		<FormControl label={I18n.t('Лимит')} type='number' name='limit' onChange={handler}
src/mixins/Note.tsx:			<strong onClick={() => setCollapsed(!collapsed)}>{I18n.t("Описание работы")}:</strong><br />
src/mixins/ObservationsList.tsx:			<p>{I18n.t("Наблюдений:")} {observations.length}</p>
src/mixins/TaxonsList.tsx:		<div>{I18n.t("Нет данных")}</div>
src/mixins/TaxonsList.tsx:			<p>{I18n.t("{1} видов:", [taxons.length])}</p>
src/mixins/UsersList.tsx:			<p>{I18n.t("{1} пользователей:", [users.length])}</p>
src/mixins/UsersList.tsx:			{users.length !== total && <p>{I18n.t("* Список неполон, должно быть {1} пользователей!", [''+total])}</p>}
src/pages/About.tsx:	<Page className='page-main' title={I18n.t("О сайте")}>
src/pages/Downloader.jsx:		this.setState({ loadingTitle: I18n.t("Загрузка наблюдений") });
src/pages/Downloader.jsx:			<Page title={I18n.t("Скачивание наблюдений")}>
src/pages/Downloader.jsx:						<FormControlTaxon className='heading' label={I18n.t("Таксон")} name="taxon"
src/pages/Downloader.jsx:						<legend>{I18n.t("Фильтрация")}</legend>
src/pages/Downloader.jsx:						<FormControl label={I18n.t("Id или имя проекта")} type='text' name='project_id' onChange={this.changeHandler}
src/pages/Downloader.jsx:						<FormControl label={I18n.t("Id или имя пользователя")} type='text' name='user_id' onChange={this.changeHandler}
src/pages/Downloader.jsx:						<FormControl label={I18n.t("Место")} type='text' name='place_id' onChange={this.changeHandler} value={this.state.place_id} list={this.state.places} clearDatalistHandler={this.clearDatalistHandler} listName='places'/>
src/pages/Downloader.jsx:						<legend>{I18n.t("Настройки даты")}</legend>
src/pages/Downloader.jsx:						<FormControl label={I18n.t("Наблюдения после")} type='date' name='d1' onChange={this.changeHandler}
src/pages/Downloader.jsx:						<FormControl label={I18n.t("Наблюдения до")} type='date' name='d2' onChange={this.changeHandler}
src/pages/Downloader.jsx:						<FormControlCheckbox label={I18n.t("Дата загрузки")} name='date_created' onChange={this.checkHandler}
src/pages/Downloader.jsx:							comment={I18n.t("Иначе дата рассматривается как дата наблюдения")}
src/pages/Downloader.jsx:						<legend>{I18n.t("Прочее")}</legend>
src/pages/Downloader.jsx:						<FormControlSelect label={I18n.t("Статус наблюдения")} name="quality_grade" onChange={this.changeHandler} value={this.state.quality_grade}
src/pages/Downloader.jsx:						<FormControl label={I18n.t("Дополнительные параметры")} type='text' name='additional' onChange={this.changeHandler}
src/pages/Downloader.jsx:						<legend>{I18n.t("Отображение")}</legend>
src/pages/Downloader.jsx:						<FormControlCheckbox label={I18n.t("Не отображать отозванные определения")} name='current_ids' onChange={this.checkHandler}
src/pages/Downloader.jsx:						<FormControlCheckbox label={I18n.t("Показывать только наблюдения")} name='hide_activity' onChange={this.checkHandler}
src/pages/Downloader.jsx:					{I18n.t("В поле таксона можно вводить как цифровой идентификатор, так и название (латинское или русское).")}
src/pages/Downloader.jsx:					{I18n.t("Если введён не ID, скрипт, после потери полем фокуса ввода, попытается найти таксон в базе iNaturalist, и подставить наиболее подходящий (по мнению айната) вариант.")}
src/pages/Downloader.jsx:					<br/>{I18n.t("В поле места требуется вводить только цифровой идентификатор.")}
src/pages/Downloader.jsx:					<br/>{I18n.t("В поле проекта можно ввести либо цифровой, либо строковый id (можно скопировать из адресной строки браузера).")}
src/pages/List.tsx:		<dd><p>{I18n.t(description)} {!!note ? <><br /><small><strong>*</strong> {I18n.t(note)}</small></> : null} </p></dd>
src/pages/List.tsx:		<Page className='page-main' title={I18n.t("Список утилит")} backlink={false}>
src/pages/List.tsx:							<React.Fragment key={module.url}><dt><Link to={module.url}>{I18n.t(module.title)}</Link></dt>
src/pages/List.tsx:					<a href='/react/inat-converter'>{I18n.t("Редактор постов в журналы")}</a>
src/pages/List.tsx:					<dd><p>{I18n.t("Конвертер для табличных данных с йната, а так же редактор для постов.")}</p></dd>
src/pages/List.tsx:					<a href='/about'>{I18n.t("О сайте")}</a>
src/pages/List.tsx:					<dd><p>{I18n.t("Некоторая информация об этом сайте.")}</p></dd>
src/pages/Members.jsx:		this.setState({ loadingTitle: I18n.t("Загрузка участников") });
src/pages/Members.jsx:			<Page title={I18n.t("Участники проекта")} className='page-members'>
src/pages/Members.jsx:					<FormControl label={I18n.t("Id или имя проекта")} type='text' name='project_id' onChange={this.changeHandler}
src/pages/NotFound.jsx:		<Page className='page-404' title={I18n.t('Страница не найдена')}>
src/pages/NotFound.jsx:				{I18n.t("Страница не найдена")}<br/>
src/pages/NotFound.jsx:				<Link to='/'>{I18n.t("Вернуться на главную")}</Link>
src/pages/Species.jsx:		this.setState({ loadingTitle: I18n.t("Загрузка новых видов") });
src/pages/Species.jsx:		this.setState({ loadingTitle: I18n.t("Загрузка всех видов") });
src/pages/Species.jsx:		this.setState({loadingTitle: I18n.t("Обработка загруженных данных"), loading: true});
src/pages/Species.jsx:			<Page title={I18n.t('Новые виды проекта')} className='page-newSpecies'>
src/pages/Species.jsx:					<FormControl label={I18n.t("Id или имя проекта")} type='text' name='project_id' onChange={this.changeHandler}
src/pages/Species.jsx:					<FormControl label={I18n.t("Id или имя пользователя")} type='text' name='user_id' onChange={this.changeHandler}
src/pages/Species.jsx:					<FormControl label={I18n.t("Дата загрузки наблюдений (с которой считать новые виды)")} type='date' name='d1' onChange={this.changeHandler}
src/pages/Species.jsx:					<FormControl label={I18n.t("Дата загрузки наблюдений (по которую считать новые виды)")} type='date' name='d2' onChange={this.changeHandler}
src/pages/Species.jsx:					<FormControlCheckbox label={I18n.t("Показывать виды, впервые зарегистрированные в этот период")} name='show_first' onChange={this.checkHandler}
src/pages/Species.jsx:					{I18n.t("pages.species.note.text")}
src/pages/SpeciesList.jsx:			<Page title={I18n.t("Виды проекта")} className='page-listSpecies'>
src/pages/SpeciesList.jsx:					<FormControl label={I18n.t("Id или имя проекта")} type='text' name='project_id' onChange={this.changeHandler}
src/pages/SpeciesList.jsx:					<FormControl label={I18n.t("Id или имя пользователя")} type='text' name='user_id' onChange={this.changeHandler}
src/pages/SpeciesList.jsx:					<FormControl label={I18n.t("Место")} type='text' name='place_id' onChange={this.changeHandler} value={this.state.place_id} list={this.state.places} clearDatalistHandler={this.clearDatalistHandler} listName='places' />
src/pages/SpeciesList.jsx:					<FormControlCheckbox label={I18n.t("Выводить только виды")} name='species_only' onChange={this.checkHandler}
src/pages/SpeciesList.jsx:					<FormControlSelect label={I18n.t("Статус наблюдения")} name="quality_grade" onChange={this.changeHandler} 
src/pages/SpeciesList.jsx:					<FormControlCheckbox label={I18n.t("Виды, встреченные только этим пользователем")} name='contribution' onChange={this.checkHandler}
src/pages/SpeciesList.jsx:					{I18n.t("Скрипт отображает все виды, отмеченные в проекте. Так же можно отобразить виды, которые наблюдал только указанный пользователь.")}
src/pages/SpeciesMissed.jsx:			<Page title={I18n.t("Пропущенные виды")} className='page-listSpecies'>
src/pages/SpeciesMissed.jsx:					<legend>{I18n.t("Фильтрация")}</legend>
src/pages/SpeciesMissed.jsx:					<FormControl label={I18n.t("Id или имя пользователя")} type='text' name='unobserved_by_user_id' onChange={this.changeHandler}
src/pages/SpeciesMissed.jsx:					<FormControl label={I18n.t("Id или имя проекта для сравнения")} type='text' name='project_id' onChange={this.changeHandler}
src/pages/SpeciesMissed.jsx:					<FormControl label={I18n.t("Id или имя пользователя для сравнения")} type='text' name='user_id' onChange={this.changeHandler}
src/pages/SpeciesMissed.jsx:					<FormControlTaxon label={I18n.t("Ограничиться таксоном")} name="taxon" onChange={this.changeHandler}
src/pages/SpeciesMissed.jsx:						<legend>{I18n.t("Прочее")}</legend>
src/pages/SpeciesMissed.jsx:					<FormControlCheckbox label={I18n.t("Выводить только виды")} name='species_only' onChange={this.checkHandler}
src/pages/SpeciesMissed.jsx:					<FormControlSelect label={I18n.t("Статус наблюдения")} name="quality_grade" onChange={this.changeHandler}
src/pages/SpeciesMissed.jsx:						<legend>{I18n.t("Отображение")}</legend>
